/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: BEDTOOLS_SORT {
        ext.prefix = {"${meta.id}.sorted"}
    }
    withName: SORT_PEAKS {
        ext.prefix = {"${meta.id}.sorted"}
    }
    withName: SORT_FOOTPRINTS {
        ext.prefix = {"${meta.id}.sorted"}
    }

    withName: BEDTOOLS_MERGE {
        ext.prefix = {"${meta.id}.merged"}
        ext.args = "-c 4 -o count_distinct"
    }

    withName: ".*MERGE_PEAKS:GAWK" {
        ext.args = "'\$NF >= ${params.min_peak_occurrence}'"
        ext.suffix = "bed"
    }

    withName: ".*PEAKS:BEDTOOLS_CLOSEST" {
        ext.args = "-D a -io -iu"
        ext.prefix = {"${meta.id}.closest"}
    }

    withName: ".*PEAKS:FILTER_CLOSEST" {
        ext.args = "'{ if (\$NF <= ${params.max_peak_gap} && \$NF >= 0) {print \$1 \"\\t\" \$3 \"\\t\" \$6 \"\\t\" \$8} }'"
        ext.prefix = {"${meta.id}.filtered"}
        ext.suffix = "bed"
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
