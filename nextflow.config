/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/rnaseq Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options (RNAseq)
    rnaseq_samplesheet         = null
    rnaseq_counts              = null

    // Input options (ChIPseq)
    chipseq_samplesheet        = null
    chipseq_fragment_size      = 200
    chipseq_fingerprint_bins   = 500000
    chipseq_read_length        = null
    chipseq_peaks              = null

    // References (General)
    genome                     = null
    splicesites                = null
    gtf_extra_attributes       = 'gene_name'
    gtf_group_features         = 'gene_id'
    featurecounts_feature_type = 'exon'
    featurecounts_group_type   = 'gene_biotype'
    gencode                    = false
    save_reference             = false
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = false

    seq_center                 = null
    save_unaligned             = false
    skip_igv                   = false


    // UMI handling (RNAseq)
    rnaseq_with_umi                   = false
    rnaseq_skip_umi_extract           = false
    rnaseq_umitools_extract_method    = 'string'
    rnaseq_umitools_grouping_method   = 'directional'
    rnaseq_umitools_dedup_stats       = false
    rnaseq_umitools_bc_pattern        = null
    rnaseq_umitools_bc_pattern2       = null
    rnaseq_umitools_umi_separator     = null
    rnaseq_umi_discard_read           = null
    rnaseq_save_umi_intermeds         = false

    // Trimming (RNAseq)
    rnaseq_trimmer               = 'trimgalore'
    rnaseq_min_trimmed_reads     = 10000
    rnaseq_extra_trimgalore_args = null
    rnaseq_extra_fastp_args      = null
    rnaseq_save_trimmed          = false
    rnaseq_skip_trimming         = false

    // Trimming (ChIPseq)
    chipseq_clip_r1                    = null
    chipseq_clip_r2                    = null
    chipseq_three_prime_clip_r1        = null
    chipseq_three_prime_clip_r2        = null
    chipseq_trim_nextseq               = null
    chipseq_skip_trimming              = false
    chipseq_save_trimmed               = false

    // BBSplit genome filtering (RNAseq)
    rnaseq_bbsplit_fasta_list         = null
    rnaseq_save_bbsplit_reads         = false
    rnaseq_skip_bbsplit               = true

    // Ribosomal RNA removal (RNAseq)
    rnaseq_remove_ribo_rna            = false
    rnaseq_save_non_ribo_reads        = false
    rnaseq_ribo_database_manifest     = "${projectDir}/subworkflows/nf-core/rnaseq/assets/rrna-db-defaults.txt"

    // Alignment (RNAseq)
    rnaseq_aligner                    = 'star_salmon'
    rnaseq_pseudo_aligner             = null
    rnaseq_bam_csi_index              = false
    rnaseq_star_ignore_sjdbgtf        = false
    rnaseq_salmon_quant_libtype       = null
    rnaseq_hisat2_build_memory        = '200.GB'  // Amount of memory required to build HISAT2 index with splice sites
    rnaseq_stringtie_ignore_gtf       = false
    rnaseq_min_mapped_reads           = 5
    rnaseq_extra_star_align_args      = null
    rnaseq_extra_salmon_quant_args    = null
    rnaseq_save_merged_fastq          = false
    rnaseq_save_align_intermeds       = false
    rnaseq_skip_markduplicates        = false

    // Alignment (ChIPseq)
    chipseq_aligner                    = 'bwa'
    chipseq_bwa_min_score              = null
    chipseq_keep_dups                  = false
    chipseq_keep_multi_map             = false
    chipseq_save_align_intermeds       = false

    // Options: Peaks (ChIPseq)
    chipseq_narrow_peak                = false
    chipseq_broad_cutoff               = 0.1
    chipseq_macs_fdr                   = null
    chipseq_macs_pvalue                = null
    chipseq_min_reps_consensus         = 1
    chipseq_save_macs_pileup           = false
    chipseq_skip_peak_qc               = false
    chipseq_skip_peak_annotation       = false
    chipseq_skip_consensus_peaks       = false

    // QC (RNAseq)
    rnaseq_skip_qc                    = false
    rnaseq_skip_stringtie             = false
    rnaseq_skip_fastqc                = false
    rnaseq_skip_preseq                = true
    rnaseq_skip_dupradar              = false
    rnaseq_skip_qualimap              = false
    rnaseq_skip_rseqc                 = false
    rnaseq_skip_biotype_qc            = false
    rnaseq_skip_deseq2_qc             = false
    rnaseq_skip_multiqc               = false
    rnaseq_deseq2_vst                 = true
    rnaseq_rseqc_modules              = 'bam_stat,inner_distance,infer_experiment,junction_annotation,junction_saturation,read_distribution,read_duplication'

    // QC (ChIPseq)
    chipseq_skip_qc                    = false
    chipseq_skip_fastqc                = false
    chipseq_skip_picard_metrics        = false
    chipseq_skip_preseq                = false
    chipseq_skip_plot_profile          = false
    chipseq_skip_plot_fingerprint      = false
    chipseq_skip_spp                   = false
    chipseq_skip_multiqc               = false
    chipseq_deseq2_vst                 = true
    chipseq_skip_deseq2_qc             = false

    // Bamtools config (ChIPseq)
    chipseq_bamtools_filter_pe_config  = "$projectDir/assets/bamtools_filter_pe.json"
    chipseq_bamtools_filter_se_config  = "$projectDir/assets/bamtools_filter_se.json"

    // MultiQC options (General)
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options (General)
    outdir                     = null
    publish_dir_mode           = 'copy'
    tracedir                   = "${params.outdir}/pipeline_info"
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes,enable_conda'

    // Config options (General)
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null
    test_data_base             = 'https://raw.githubusercontent.com/nf-core/test-datasets/rnaseq3'

    // Max resource options (General)
    max_memory                 = '128.GB'
    max_cpus                   = 64
    max_time                   = '240.h'

    // TF-Prioritizer
    peakBindingSiteSearch      = 'incl_between'
    maxDistance                = 500
    min_count                  = 0
    min_tpm                    = 0
    mix_samples                = true
    min_occurrence             = 1
    taxonomy                   = null
    top_target_genes           = 30

    tepic_pwm                  = null
    tepic_windowSize           = 50000
    tepic_loopWindows          = 5000
    tepic_exponentialDecay     = true
    tepic_normalizePeakLength  = true
    tepic_maxMinutesPerChromosome = 3
    tepic_originalScaling      = false
    tepic_pValue               = 0.05
    tepic_affinityCutOff       = 0.05
    tepic_gtf                  = null

    dynamite_ofolds            = 3
    dynamite_ifolds            = 6
    dynamite_alpha             = 0.1
    dynamite_randomize         = false
    dynamite_min_regression    = 0.1

    chipatlas_tissue_types     = null
    chipatlas_genome           = null
    chipatlas_threshold        = 5
    biomart_species            = null
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/rnaseq custom profiles from different institutions.
try {
    includeConfig "${params.custom_config_base}/pipeline/rnaseq.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config/rnaseq profiles: ${params.custom_config_base}/pipeline/rnaseq.config")
}

profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    podman {
        podman.enabled         = true
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    shifter {
        shifter.enabled        = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
    }
    charliecloud {
        charliecloud.enabled   = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 16
        executor.memory        = 60.GB
    }
    test          { includeConfig 'conf/test.config'      }
    test_full     { includeConfig 'conf/test_full.config' }
    test_full_aws { includeConfig 'conf/test_full.config' }
    test_full_gcp {
        includeConfig 'conf/test_full.config'
        params.rnaseq_samplesheet = 'https://raw.githubusercontent.com/nf-core/test-datasets/rnaseq/samplesheet/v3.10/samplesheet_full_gcp.csv'
    }
    test_full_azure {
        includeConfig 'conf/test_full.config'
        params.rnaseq_samplesheet = 'https://raw.githubusercontent.com/nf-core/test-datasets/rnaseq/samplesheet/v3.10/samplesheet_full_azure.csv'
    }
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/tfprio'
    author          = """Nico Trummer"""
    homePage        = 'https://github.com/nf-core/tfprio'
    description     = """TF-Prioritizer"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
if (!params.rnaseq_counts) {
    includeConfig 'conf/modules_rnaseq.config'
}
if (!params.chipseq_peaks) {
    includeConfig 'conf/modules_chipseq.config'
}
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
